Given an input string s, reverse the order of the words.

A word is defined as a sequence of non-space characters. The words in s will be separated by at least one space.

Return a string of the words in reverse order concatenated by a single space.

Note that s may contain leading or trailing spaces or multiple spaces between two words. The returned string should only have a single space separating the words. Do not include any extra spaces.

 

Example 1:

Input: s = "the sky is blue"
Output: "blue is sky the"
Example 2:

Input: s = "  hello world  "
Output: "world hello"
Explanation: Your reversed string should not contain leading or trailing spaces.
Example 3:

Input: s = "a good   example"
Output: "example good a"
Explanation: You need to reduce multiple spaces between two words to a single space in the reversed string.
 

Constraints:

1 <= s.length <= 104
s contains English letters (upper-case and lower-case), digits, and spaces ' '.
There is at least one word in s.
 

soltuion:

class Solution {
    public String reverseWords(String s) {
        StringBuilder sb = new StringBuilder();
        int left =0;
        int right = s.length()-1;
        while (left <= right && s.charAt(left) == ' ') 
            left++;
        while (right >= left && s.charAt(right) == ' ')
            right--;
        char[] ch = s.substring(left,right+1).toCharArray();
        reverse(ch,0,ch.length-1);
        int start=0;
        for(int i=0;i<ch.length;i++)
        {
            if(ch[i]==' ')
            {
                reverse(ch,start ,i-1);
                start=i+1;
            }
        }
        reverse(ch, start, ch.length - 1);
        for(int i=0;i<ch.length;i++)
        {
            if(ch[i]!=' ' || (i>0 && ch[i-1]!=' '))
            {
                sb.append(ch[i]);
            }
        }
    return sb.toString();
    }
    public void reverse(char[] ch,int left ,int right)
    {
        while(left<right)
        {
            char temp = ch[left];
            ch[left] = ch[right];
            ch[right] = temp;
            left++;right--;
        }
    }
}
