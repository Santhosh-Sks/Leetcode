You are given a 0-indexed array of positive integers nums.

In one operation, you can swap any two adjacent elements if they have the same number of 
set bits
. You are allowed to do this operation any number of times (including zero).

Return true if you can sort the array, else return false.

 

Example 1:

Input: nums = [8,4,2,30,15]
Output: true

Example 2:

Input: nums = [1,2,3,4,5]
Output: true
Explanation: The array is already sorted, hence we return true.

class Solution {
    public boolean canSortArray(int[] nums) {
        for(int i=0;i<nums.length;i++)
        {
            for(int j=i+1;j<nums.length;j++)
            {
                if(nums[i]>nums[j])
                {
                    if(Integer.bitCount(nums[i])==
                    Integer.bitCount(nums[j])){
                        int temp=nums[i];
                        nums[i]=nums[j];
                        nums[j]=temp;
                    }
                    else 
                    {
                        return false;
                    }
                }
               
            }
        }
         for(int i=1;i<=nums.length-1;i++){
            if(nums[i]<nums[i-1])
            {
                 return false;
            }
         }
        return true;
    }
}
